# Bishop move generation file from the magic bitboards

import os
import sys
import inspect
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
parentdir = os.path.dirname(currentdir)
# Add parent directory to path
sys.path.insert(0, parentdir) 

import pickle
import numpy as np

# To calculate occupancy and attack masks run commented code below
# from pcs import rook
# from magics.r_moves_table import *
# # Get ocupancy masks
# occ_masks=get_occ_masks()
# # Attack masks
# att_masks=gen_att_masks()

# Use precalculated occupancy and attack masks
occ_masks=[18374403900871474688, 9114861777597660672, 9114861777597660672, 9114861777597660672,
9114861777597660672, 9114861777597660672, 9114861777597660672, 9187201950435737344, 71775015237778944,
35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736,
35887507618889472, 71775015237778944, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736,
35604928818740736, 35604928818740736, 35887507618889472, 71775015237778944, 35604928818740736, 35604928818740736,
35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35887507618889472, 71775015237778944,
35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736,
35887507618889472, 71775015237778944, 35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736,
35604928818740736, 35604928818740736, 35887507618889472, 71775015237778944, 35604928818740736, 35604928818740736,
35604928818740736, 35604928818740736, 35604928818740736, 35604928818740736, 35887507618889472, 71775015237779198,
35604928818740862, 35604928818740862, 35604928818740862, 35604928818740862, 35604928818740862, 35604928818740862,
35887507618889599]

att_masks=[9187484529235886208, 13781085504453754944, 16077885992062689312, 17226286235867156496,
17800486357769390088, 18087586418720506884, 18231136449196065282, 18302911464433844481, 9259260648297103488,
4665518383679160384, 2368647251370188832, 1220211685215703056, 645993902138460168, 358885010599838724, 215330564830528002,
143553341945872641, 9259541023762186368, 4629910699613634624, 2315095537539358752, 1157687956502220816, 578984165983651848,
289632270724367364, 144956323094725122, 72618349279904001, 9259542118978846848, 4629771607097753664, 2314886351157207072,
1157443723186933776, 578722409201797128, 289361752209228804, 144681423712944642, 72341259464802561, 9259542123257036928,
4629771063767613504, 2314885534022901792, 1157442769150545936, 578721386714368008, 289360695496279044, 144680349887234562,
72340177082712321, 9259542123273748608, 4629771061645230144, 2314885530830970912, 1157442765423841296, 578721382720276488,
289360691368494084, 144680345692602882, 72340172854657281, 9259542123273813888, 4629771061636939584, 2314885530818502432,
1157442765409283856, 578721382704674568, 289360691352369924, 144680345676217602, 72340172838141441, 9259542123273814143,
4629771061636907199, 2314885530818453727, 1157442765409226991, 578721382704613623, 289360691352306939, 144680345676153597,
72340172838076926]

# Load bishop magics
magic_tuples=pickle.load( open( parentdir+"\\magics\\rook_magics.p", "rb" ) )


def gen_rook_moves(sqr, fr_bb, en_bb): #square, friend occupancy bitboard, enemy occupancy bitboard
	# Total blocker set is the sum of both blocker sets and remove piece from bitboard
	blockers=fr_bb|en_bb&(0xFFFFFFFFFFFFFFFF-2**(63-sqr))
	# Calculate occupancy squares with the masks
	occupancy=att_masks[sqr]&blockers&occ_masks[sqr]
	# Calculate index for magic bitboard
	magic=magic_tuples[sqr]
	idx=((occupancy*magic[1])&0xFFFFFFFFFFFFFFFF)>>(64-magic[2])
	# Retrieve moves from magic bitboard table and remove own captures
	avl_moves_bb=magic[0][idx]&(~fr_bb)

	# Return list of destination squares
	move_list=[]
	for i in range(64):
		if 1&(avl_moves_bb>>(63-i))==1:
			move_list.append(i)

	return move_list
